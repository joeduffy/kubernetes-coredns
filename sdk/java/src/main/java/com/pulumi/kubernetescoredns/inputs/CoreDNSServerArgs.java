// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescoredns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetescoredns.inputs.CoreDNSServerPluginArgs;
import com.pulumi.kubernetescoredns.inputs.CoreDNSServerZoneArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreDNSServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreDNSServerArgs Empty = new CoreDNSServerArgs();

    /**
     * the plugins to use for this server block.
     * 
     */
    @Import(name="plugins")
    private @Nullable Output<List<CoreDNSServerPluginArgs>> plugins;

    /**
     * @return the plugins to use for this server block.
     * 
     */
    public Optional<Output<List<CoreDNSServerPluginArgs>>> plugins() {
        return Optional.ofNullable(this.plugins);
    }

    /**
     * optional, defaults to &#34;&#34; (which equals 53 in CoreDNS).
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return optional, defaults to &#34;&#34; (which equals 53 in CoreDNS).
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * the `zones` block can be left out entirely, defaults to &#34;.&#34;
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<CoreDNSServerZoneArgs>> zones;

    /**
     * @return the `zones` block can be left out entirely, defaults to &#34;.&#34;
     * 
     */
    public Optional<Output<List<CoreDNSServerZoneArgs>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private CoreDNSServerArgs() {}

    private CoreDNSServerArgs(CoreDNSServerArgs $) {
        this.plugins = $.plugins;
        this.port = $.port;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreDNSServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreDNSServerArgs $;

        public Builder() {
            $ = new CoreDNSServerArgs();
        }

        public Builder(CoreDNSServerArgs defaults) {
            $ = new CoreDNSServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param plugins the plugins to use for this server block.
         * 
         * @return builder
         * 
         */
        public Builder plugins(@Nullable Output<List<CoreDNSServerPluginArgs>> plugins) {
            $.plugins = plugins;
            return this;
        }

        /**
         * @param plugins the plugins to use for this server block.
         * 
         * @return builder
         * 
         */
        public Builder plugins(List<CoreDNSServerPluginArgs> plugins) {
            return plugins(Output.of(plugins));
        }

        /**
         * @param plugins the plugins to use for this server block.
         * 
         * @return builder
         * 
         */
        public Builder plugins(CoreDNSServerPluginArgs... plugins) {
            return plugins(List.of(plugins));
        }

        /**
         * @param port optional, defaults to &#34;&#34; (which equals 53 in CoreDNS).
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port optional, defaults to &#34;&#34; (which equals 53 in CoreDNS).
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param zones the `zones` block can be left out entirely, defaults to &#34;.&#34;
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<CoreDNSServerZoneArgs>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones the `zones` block can be left out entirely, defaults to &#34;.&#34;
         * 
         * @return builder
         * 
         */
        public Builder zones(List<CoreDNSServerZoneArgs> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones the `zones` block can be left out entirely, defaults to &#34;.&#34;
         * 
         * @return builder
         * 
         */
        public Builder zones(CoreDNSServerZoneArgs... zones) {
            return zones(List.of(zones));
        }

        public CoreDNSServerArgs build() {
            return $;
        }
    }

}
