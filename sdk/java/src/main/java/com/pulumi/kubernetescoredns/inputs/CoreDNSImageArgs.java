// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescoredns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreDNSImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreDNSImageArgs Empty = new CoreDNSImageArgs();

    /**
     * Image pull policy.
     * 
     */
    @Import(name="pullPolicy")
    private @Nullable Output<String> pullPolicy;

    /**
     * @return Image pull policy.
     * 
     */
    public Optional<Output<String>> pullPolicy() {
        return Optional.ofNullable(this.pullPolicy);
    }

    /**
     * Specify container image pull secrets.
     * 
     */
    @Import(name="pullSecrets")
    private @Nullable Output<List<String>> pullSecrets;

    /**
     * @return Specify container image pull secrets.
     * 
     */
    public Optional<Output<List<String>>> pullSecrets() {
        return Optional.ofNullable(this.pullSecrets);
    }

    /**
     * The image repository to pull from.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return The image repository to pull from.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    /**
     * The image tag to pull from.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return The image tag to pull from.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private CoreDNSImageArgs() {}

    private CoreDNSImageArgs(CoreDNSImageArgs $) {
        this.pullPolicy = $.pullPolicy;
        this.pullSecrets = $.pullSecrets;
        this.repository = $.repository;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreDNSImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreDNSImageArgs $;

        public Builder() {
            $ = new CoreDNSImageArgs();
        }

        public Builder(CoreDNSImageArgs defaults) {
            $ = new CoreDNSImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pullPolicy Image pull policy.
         * 
         * @return builder
         * 
         */
        public Builder pullPolicy(@Nullable Output<String> pullPolicy) {
            $.pullPolicy = pullPolicy;
            return this;
        }

        /**
         * @param pullPolicy Image pull policy.
         * 
         * @return builder
         * 
         */
        public Builder pullPolicy(String pullPolicy) {
            return pullPolicy(Output.of(pullPolicy));
        }

        /**
         * @param pullSecrets Specify container image pull secrets.
         * 
         * @return builder
         * 
         */
        public Builder pullSecrets(@Nullable Output<List<String>> pullSecrets) {
            $.pullSecrets = pullSecrets;
            return this;
        }

        /**
         * @param pullSecrets Specify container image pull secrets.
         * 
         * @return builder
         * 
         */
        public Builder pullSecrets(List<String> pullSecrets) {
            return pullSecrets(Output.of(pullSecrets));
        }

        /**
         * @param pullSecrets Specify container image pull secrets.
         * 
         * @return builder
         * 
         */
        public Builder pullSecrets(String... pullSecrets) {
            return pullSecrets(List.of(pullSecrets));
        }

        /**
         * @param repository The image repository to pull from.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository The image repository to pull from.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        /**
         * @param tag The image tag to pull from.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag The image tag to pull from.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public CoreDNSImageArgs build() {
            return $;
        }
    }

}
