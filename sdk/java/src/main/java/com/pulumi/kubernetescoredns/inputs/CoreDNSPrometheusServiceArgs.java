// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescoredns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreDNSPrometheusServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreDNSPrometheusServiceArgs Empty = new CoreDNSPrometheusServiceArgs();

    /**
     * Annotations to add to the metrics Service.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Annotations to add to the metrics Service.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Set this to true to create Service for Prometheus metrics.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Set this to true to create Service for Prometheus metrics.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    private CoreDNSPrometheusServiceArgs() {}

    private CoreDNSPrometheusServiceArgs(CoreDNSPrometheusServiceArgs $) {
        this.annotations = $.annotations;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreDNSPrometheusServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreDNSPrometheusServiceArgs $;

        public Builder() {
            $ = new CoreDNSPrometheusServiceArgs();
        }

        public Builder(CoreDNSPrometheusServiceArgs defaults) {
            $ = new CoreDNSPrometheusServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations to add to the metrics Service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations to add to the metrics Service.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param enabled Set this to true to create Service for Prometheus metrics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Set this to true to create Service for Prometheus metrics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public CoreDNSPrometheusServiceArgs build() {
            return $;
        }
    }

}
